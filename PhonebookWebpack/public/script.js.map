{"version":3,"file":"script.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,oDAAoD,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://public/./js/phonebook.js"],"sourcesContent":["function phoneBookService() {\r\n    this.url = \"/api/\";\r\n}\r\n\r\nfunction get(url, data) {\r\n    return $.get(url, data);\r\n}\r\n\r\nfunction post(url, data) {\r\n    return $.post({\r\n        url: url,\r\n        data: JSON.stringify(data),\r\n        contentType: \"application/json\"\r\n    });\r\n}\r\n\r\nphoneBookService.prototype.getContacts = function (term) {\r\n    return get(this.url + \"getContacts\", {term: term});\r\n}\r\n\r\nphoneBookService.prototype.addContact = function (contact) {\r\n    return post(this.url + \"addContact\", {contact: contact});\r\n}\r\n\r\nphoneBookService.prototype.deleteContact = function (id) {\r\n    return post(this.url + \"deleteContact\", {id: id});\r\n}\r\n\r\nnew Vue({\r\n    el: \"#app\",\r\n\r\n    data: {\r\n        contacts: [],\r\n        id: 1,\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        term: \"\",\r\n        deletableContact: null,\r\n        service: new phoneBookService()\r\n    },\r\n\r\n    methods: {\r\n        loadContact: function () {\r\n            var self = this;\r\n            this.service.getContacts(this.term).done(function (contacts) {\r\n                self.contacts = contacts;\r\n            }).fail(function () {\r\n                alert(\"Не удалось загрузить контакт\");\r\n            });\r\n        },\r\n\r\n        addContact: function () {\r\n            var isCorrect = true;\r\n            var nameInput = $(\"#name-input\");\r\n            var nameError = $(\"#name-error-message\");\r\n            var lastNameInput = $(\"#last-name-input\");\r\n            var lastNameError = $(\"#last-name-error-message\");\r\n            var phoneNumberInput = $(\"#phone-number-input\");\r\n            var phoneNumberError = $(\"#phone-error-message\");\r\n\r\n            if (this.name === \"\") {\r\n                isCorrect = false;\r\n                nameInput.addClass(\"invalid\");\r\n                nameError.show();\r\n            } else {\r\n                nameInput.removeClass(\"invalid\");\r\n                nameError.hide();\r\n            }\r\n\r\n            if (this.lastName === \"\") {\r\n                isCorrect = false;\r\n                lastNameInput.addClass(\"invalid\");\r\n                lastNameError.show();\r\n            } else {\r\n                lastNameInput.removeClass(\"invalid\");\r\n                lastNameError.hide();\r\n            }\r\n\r\n            var regex = /^(\\+7|7|8)?[\\s\\-]?\\(?[0-9]{3}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\r\n            var isValid = regex.test(this.phone);\r\n\r\n            if (this.phone === \"\" || !isValid) {\r\n                phoneNumberInput.addClass(\"invalid\");\r\n                phoneNumberError.show();\r\n                isCorrect = false;\r\n            } else {\r\n                phoneNumberInput.removeClass(\"invalid\");\r\n                phoneNumberError.hide();\r\n                phoneNumberInput.text(\"Номер введен некорректно, введите в формате: +79123456789\");\r\n            }\r\n\r\n            if (!isCorrect) {\r\n                return;\r\n            }\r\n\r\n            this.loadContact();\r\n            var self = this;\r\n\r\n            var request = {\r\n                name: this.name,\r\n                lastName: this.lastName,\r\n                phone: this.phone,\r\n                id: this.id\r\n            }\r\n\r\n            this.service.addContact(request).done(function (response) {\r\n                if (response.message === \"Контакт с таким номером телефона уже есть\") {\r\n                    phoneNumberError.text(\"Контакт с таким номером уже существует\");\r\n                    phoneNumberInput.addClass(\"invalid\");\r\n                    phoneNumberError.show();\r\n\r\n                    return;\r\n                }\r\n\r\n                if (!response.success) {\r\n                    alert(response.message);\r\n                    return;\r\n                }\r\n\r\n                self.loadContact();\r\n\r\n                self.id++;\r\n                self.name = \"\";\r\n                self.lastName = \"\";\r\n                self.phone = \"\";\r\n            }).fail(function () {\r\n                alert(\"Не удалось добавить контакт\")\r\n            });\r\n        },\r\n\r\n        deleteContact: function () {\r\n            var self = this;\r\n\r\n            this.service.deleteContact(self.deletableContact.id).done(function (response) {\r\n                if (!response.success) {\r\n                    alert(response.message);\r\n\r\n                    return;\r\n                }\r\n\r\n                self.loadContact();\r\n            }).fail(function () {\r\n                alert(\"Не удалось удалить контакт\");\r\n            });\r\n        },\r\n\r\n        putToDeleteContact: function (contact) {\r\n            this.deletableContact = contact;\r\n        }\r\n    }\r\n});"],"names":[],"sourceRoot":""}